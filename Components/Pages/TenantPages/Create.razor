@page "/tenants/create"
@using Microsoft.EntityFrameworkCore
@using RentalSystem.Models
@inject IDbContextFactory<RentalSystem.Data.RentalSystemContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Tenant</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Tenant" OnValidSubmit="AddTenant" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label> 
                <InputText id="firstname" @bind-Value="Tenant.FirstName" class="form-control" /> 
                <ValidationMessage For="() => Tenant.FirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label> 
                <InputText id="lastname" @bind-Value="Tenant.LastName" class="form-control" /> 
                <ValidationMessage For="() => Tenant.LastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Tenant.Email" class="form-control" /> 
                <ValidationMessage For="() => Tenant.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="phone" class="form-label">Phone:</label> 
                <InputNumber id="phone" @bind-Value="Tenant.Phone" class="form-control" /> 
                <ValidationMessage For="() => Tenant.Phone" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="emergency_contact_name" class="form-label">Emergency_Contact_Name:</label> 
                <InputText id="emergency_contact_name" @bind-Value="Tenant.Emergency_Contact_Name" class="form-control" /> 
                <ValidationMessage For="() => Tenant.Emergency_Contact_Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="emergency_contact_phone" class="form-label">Emergency_Contact_Phone:</label> 
                <InputNumber id="emergency_contact_phone" @bind-Value="Tenant.Emergency_Contact_Phone" class="form-control" /> 
                <ValidationMessage For="() => Tenant.Emergency_Contact_Phone" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/tenants">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Tenant Tenant { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddTenant()
    {
        using var context = DbFactory.CreateDbContext();
        context.Tenants.Add(Tenant);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/tenants");
    }
}
